#include<stdio.h>

//X星球特别讲究秩序，所有道路都是单行线。
//一个甲壳虫车队，共16辆车，按照编号先后发车，夹在其它车流中，缓缓前行。

//路边有个死胡同，只能容一辆车通过，是临时的检查站，如图所示。
//X星球太死板，要求每辆路过的车必须进入检查站，也可能不检查就放行，也可能仔细检查。
//如果车辆进入检查站和离开的次序可以任意交错。那么，该车队再次上路后，可能的次序有多少种？

//为了方便起见，假设检查站可容纳任意数量的汽车。
//显然，如果车队只有1辆车，可能次序1种；2辆车可能次序2种；3辆车可能次序5种。

//这个题目是按顺序进去 进出的顺序可以自己选择 然后就是这样 都是单向的 先进后出 就相当于栈
//题目使用的是递归的方法

int come(int a,int b){//两个参数 第一个参数a是在外面等待的参数 第二个参数就是进入的参数 
	if(a==0){
		return 1;//a等于0就是相当于已经完成了一次 所有的车都出去完成了 
	}
	if(b==0){//b等于零就是当前的车子已经检查完成 
		return come(a-1,1);//看看a还有没有车子了 然后就是来一个一个拉出来
		//这个其实就是相当于按就是 进一个出一个 
	}

	
	return come(a-1,b+1)+come(a,b-1); //第一个就是大部分的 第二个就是对个别下面的进行处理 
	
	
} 

int main(){
	int num=come(4,0);
	printf("%d",num);
	
	
} 